export const en = {
  // Common
  common: {
    save: 'Save',
    cancel: 'Cancel',
    delete: 'Delete',
    edit: 'Edit',
    add: 'Add',
    create: 'Create',
    search: 'Search',
    filter: 'Filter',
    loading: 'Loading...',
    saving: 'Saving...',
    saved: 'Saved',
    error: 'Error',
    success: 'Success',
    warning: 'Warning',
    info: 'Information',
    confirm: 'Confirm',
    close: 'Close',
    back: 'Back',
    next: 'Next',
    previous: 'Previous',
    submit: 'Submit',
    reset: 'Reset',
    clear: 'Clear',
    select: 'Select',
    upload: 'Upload',
    download: 'Download',
    export: 'Export',
    import: 'Import',
    active: 'Active',
    inactive: 'Inactive',
    errorOccurred: 'An error occurred',
    tryAgainLater: 'Please try again later.',
    auditSystemWarning: '⚠️ Audit system under development',
    inDevelopment: 'In Development',
    access: 'Access',
    noRolesAssigned: 'No roles assigned',
    noOverridesSpecific: 'No specific overrides',
    level: 'Level',
    location: 'Location',
    assignedOn: 'Assigned on',
    messages: {
      errorSaving: 'Error saving',
      savedSuccessfully: 'Saved successfully',
    }
  },
  
  // User Profile & Overview
  userOverview: {
    emailVerified: 'Email verified',
    locationsAssigned: 'Assigned Locations',
    noLocationsAssigned: 'No locations assigned',
    topRoles: 'Top Roles',
    accountInfo: 'Account Information',
    registered: 'Registered',
    lastActivity: 'Last activity',
    accountStatus: 'Account Status',
    accountActive: 'Account active',
    emailVerifiedStatus: 'Email verified',
  },
  
  // Me Page (User Profile)
  me: {
    title: 'My Profile',
    description: 'View your personal information and assignments',
    personalInfo: 'Personal Information',
    personalInfoDesc: 'Your personal and contact details',
    fullName: 'Full Name',
    email: 'Email',
    phone: 'Phone',
    editProfile: 'Edit Profile',
    editProfileDesc: 'Update your personal information',
    comingSoon: 'Coming Soon',
    rolesAssigned: 'Assigned Roles',
    rolesAssignedDesc: 'Active roles for each location',
    locationsAssigned: 'Assigned Locations',
    locationsAssignedDesc: 'Locations you have access to',
    locationLabel: 'Location',
    global: 'Global',
    since: 'Since',
    rolesCount: 'role',
    rolesCountPlural: 'roles',
  },
  
  // Navigation
  nav: {
    dashboard: 'Dashboard',
    inventory: 'Inventory',
    kitchen: 'Kitchen',
    bar: 'Bar',
    cleaning: 'Cleaning',
    history: 'History',
    templates: 'Template Management',
    productsSeparator: 'Products',
    catalog: 'Product Catalog',
    shifts: 'Klyra Shifts',
    onboarding: 'Rota Onboarding',
    planner: 'Shift Planner',
    myShifts: 'My Shifts',
    jobTags: 'Job Tags',
    compliance: 'Compliance',
    recipes: 'Klyra Recipes',
    recipesList: 'Recipe List',
    admin: 'Administration',
    invitations: 'Invitations',
    locations: 'Locations',
    permissionTags: 'Permission Tags',
    emailLogs: 'Email Logs',
    qa: 'QA & Debug',
    settings: 'Settings',
    locked: 'Locked',
    platform: 'Platform',
    systemActive: 'System Active',
    home: 'Home',
    other: 'Other',
  },

  // Header
  header: {
    noLocation: 'No location',
    selectLocation: 'Select active location',
    errorMemberships: 'Unable to load assignments.',
    errorLocations: 'Unable to load locations.',
    errorFatal: 'Unexpected error.',
  },

  // User dropdown
  user: {
    login: 'Login',
    myProfile: 'My Profile',
    settings: 'Settings',
    logout: 'Logout',
  },

  // Admin
  admin: {
    users: {
      title: 'User Management',
      subtitle: 'View and manage all system users',
      totalUsers: 'Manage system users ({count} total)',
      searchPlaceholder: 'Search by name...',
      search: 'Search',
      noUsers: 'No users found',
      viewDetails: 'Details',
      active: 'Active',
      inactive: 'Inactive',
      page: 'Page {page} • {shown} of {total} users',
      previous: 'Previous',
      next: 'Next',
      emailNotAvailable: 'Email not available',
      nameNotAvailable: 'Name not available',
      id: 'ID',
      email: 'Email',
      name: 'Name',
      status: 'Status',
      registered: 'Registered',
      actions: 'Actions',
    },
    inviteUserForm: {
      email: 'Email',
      emailPlaceholder: 'user@example.com',
      emailRequired: 'Invalid email',
      role: 'Role',
      roleRequired: 'Select role...',
      locations: 'Locations',
      locationsAtLeastOne: 'at least one',
      jobTitles: 'Job Titles',
      jobTitlesOptional: 'optional',
      jobTitlesDescription: 'Selected job titles will be applied to all selected locations',
      permissionOverrides: 'Permission Overrides per Location',
      permission: 'Permission',
      loadingPermissions: 'Loading permissions...',
      overrideIndicator: 'Orange bordered checkboxes indicate overrides from role permissions',
      expiryDays: 'Expiry (days)',
      expiryMessage: 'The invitation will expire in {days} days',
      creating: 'Creating...',
      createInvite: 'Create Invite',
      successTitle: 'Invitation Created Successfully!',
      successMessage: 'Copy and send this link to the invited user:',
      createNew: 'Create New Invitation',
    },
    invitationsList: {
      activeInvites: '{count} active invitations found',
      refresh: 'Refresh',
      noInvites: 'No active invitations found',
      noInvitesDescription: 'Expired, revoked or already accepted invitations are not shown',
      role: 'Role',
      createdAgo: 'Created',
      expiresIn: 'Expires',
      copyLink: 'Copy Link',
      revoke: 'Revoke',
      statusPending: 'Pending',
      statusSent: 'Email sent',
      statusAccepted: 'Accepted',
      statusRevoked: 'Revoked',
      statusExpired: 'Expired',
    },
    locations: {
      name: 'Location Name',
      namePlaceholder: 'e.g. Milan Downtown Office',
      city: 'City',
      cityPlaceholder: 'e.g. Milan',
      country: 'Country',
      phone: 'Phone',
      phonePlaceholder: '+33 1 23 45 67 89',
      email: 'Email',
      emailPlaceholder: 'location@company.com',
      address: 'Address',
      addressPlaceholder: 'Full address...',
      status: 'Status',
      active: 'Active',
      archived: 'Archived',
      photoTitle: 'Location Photo',
      photoLabel: 'Upload a photo (optional)',
      photoPreview: 'Location photo preview',
      cancel: 'Cancel',
      creating: 'Creating...',
      create: 'Create Location',
    },
    accessDenied: {
      title: 'Admin Access Denied',
      description: 'Organization admin access is required to view this page.',
      makeSure: 'Make sure you\'re in the correct organization and have admin permissions.',
      backToHome: 'Back to Home',
    },
    
    // Invitations Page
    invitationsPage: {
      usersLink: 'Users',
      title: 'Invitation Management',
      description: 'Create and manage multi-location invitations with custom permissions',
      createTitle: 'Create New Invitation',
      createDescription: 'Invite a user with specific roles and permissions for locations',
      listTitle: 'Active Invitations',
      listDescription: 'List of sent invitations and their status',
    },
    userManagement: 'User Management',
    userManagementDesc: 'Manage users, roles, and permissions',
    inviteUser: 'Invite User',
    backToList: 'Back to List',
    inviteUserTitle: 'Invite New User',
    inviteUserDesc: 'Send an invitation to a new user to join the platform',
    inviteDetails: 'Invitation Details',
    inviteDetailsDesc: 'Fill in the information to send the invitation',
    accessDeniedOld: 'Access Denied',
    accessDeniedDesc: 'You do not have the necessary permissions to access this admin section.',
    adminRequired: 'Administrator role is required to view this page.',
    
    // Feature Flags UI (specific to flags page)
    flag: 'Flag',
    module: 'Module',
    scope: 'Scope',
    global: 'Global',
    modify: 'Edit',
    totalFlags: 'Total Flags',
    activeFlags: 'Active Flags',
    globalFlags: 'Global Flags',
    perLocation: 'Per Location',
    activeFlagsTitle: 'Active Feature Flags',
    manageFeaturesDesc: 'Manage active features for your organization',
    
    // Templates Management
    templates: {
      title: 'Inventory Template Management',
      description: 'Create and manage inventory templates',
      newTemplate: 'New Template',
      firstTemplate: 'Create First Template',
      noTemplates: 'No templates available',
      noTemplatesDescription: 'Create your first template to speed up inventory creation',
      version: 'Version',
      products: 'products',
      others: 'other products',
      loading: 'Loading templates...',
      deleteConfirm: 'Are you sure you want to delete this template?',
      category: {
        kitchen: 'Kitchen',
        bar: 'Bar',
        cleaning: 'Cleaning',
      },
      status: {
        active: 'Active',
        inactive: 'Inactive',
      },
      actions: {
        edit: 'Edit',
        activate: 'Activate',
        deactivate: 'Deactivate',
        delete: 'Delete',
      },
      toast: {
        activated: 'Template activated',
        deactivated: 'Template deactivated',
        deleted: 'Template deleted',
        errorLoading: 'Error loading template',
        errorUpdating: 'Error updating',
        errorDeleting: 'Error deleting',
      },
    },
    
    // User Detail Page
    resendInvite: 'Resend Invite',
    manageRoles: 'Manage Roles',
    overview: 'Overview',
    rolesAndLocation: 'Roles & Location',
    compliance: 'Compliance',
    activity: 'Activity',
    security: 'Security',
    userNotAssignedToLocation: 'User is not assigned to any location',
    loadingRoles: 'Loading roles...',
    loadingActivity: 'Loading activity...',
    accountSecurity: 'Account Security',
    activeSessions: 'Active Sessions',
    manageActiveSessionsDesc: 'Manage user\'s active sessions',
    revokeAll: 'Revoke All',
    resetPassword: 'Reset Password',
    sendResetEmail: 'Send password reset email',
    sendReset: 'Send Reset',
    
    // Common Admin Labels
    flagCodePlaceholder: 'e.g. advanced_feature',
    nameNotAvailable: 'Name not available',
    edit: 'Edit',
    save: 'Save',
    saving: 'Saving...',
    cancel: 'Cancel',
    delete: 'Delete',
    add: 'Add',
    adding: 'Adding...',
    remove: 'Remove',
    removing: 'Removing...',
    assign: 'Assign',
    assigning: 'Assigning...',
    updating: 'Updating...',
    loading: 'Loading...',
    filters: 'Filters',
    actions: 'Actions',
    status: 'Status',
    active: 'Active',
    inactive: 'Inactive',
    archived: 'Archived',
    backToSettings: 'Back to Settings',
    confirm: 'Confirm',
    
    // Locations
    locationsTitle: 'Location Management',
    locationsDesc: 'Manage company locations and assign managers',
    addLocation: 'Add Location',
    createLocation: 'Create New Location',
    createLocationDesc: 'Add a new company location to the system',
    locationInfo: 'Location Information',
    locationInfoGeneral: 'General Information',
    locationInfoEdit: 'Edit Information',
    locationName: 'Name',
    locationCity: 'City',
    locationCountry: 'Country',
    locationPhone: 'Phone',
    locationEmail: 'Email',
    locationAddress: 'Address',
    locationManagers: 'Current Managers',
    locationManagersAdd: 'Add Manager',
    locationManagerEmail: 'New manager email',
    locationManagerAssigned: 'Assigned on',
    noManagers: 'No managers assigned to this location.',
    noManagersDesc: 'Use the form above to add the first manager.',
    notSpecified: 'Not specified',
    searchPlaceholder: 'Search by name or city...',
    allStatuses: 'All',
    lastUpdate: 'Last Update',
    openLocation: 'Open',
    planLimit: 'You have reached the plan limit',
    planLimitDesc: 'Upgrade your plan to add more.',
    
    // Users & Permissions
    jobTags: 'Job Tags',
    jobTagsDesc: 'Manage job titles assigned to the user for this location',
    jobTagsAssigned: 'Assigned Job Tags',
    jobTagsAdd: 'Add Job Tag',
    jobTagsSelect: 'Select a job tag...',
    jobTagsNone: 'No job tags assigned for this location',
    jobTagsAllAssigned: 'All available job tags are already assigned',
    removeJobTag: 'Remove job tag',
    
    complianceViolations: 'Active Violations',
    complianceViolationsSilenced: 'Silenced Violations',
    complianceNoViolations: 'No active violations',
    complianceSilence: 'Silence',
    complianceSilenceTitle: 'Silence Violation',
    complianceSilenceDesc: 'This action will silence the violation and requires a reason for audit.',
    complianceSilencePlaceholder: 'Enter reason (min 10 characters)...',
    complianceSilenceConfirm: 'Confirm',
    complianceReason: 'Reason',
    complianceCritical: 'CRITICAL',
    complianceWarning: 'WARNING',
    complianceDate: 'Date',
    complianceRest: 'Rest',
    complianceHours: 'Hours',
    complianceMinRequired: 'Reason required',
    complianceErrorLoading: 'Error loading violations',
    complianceErrorSilencing: 'Error silencing violation',
    
    effectivePermissions: 'Effective Permissions',
    effectivePermissionsAdmin: 'Admin',
    effectivePermissionsAdminDesc: 'This user has full administrative privileges (wildcard "*"). Can access all system features.',
    effectivePermissionsNone: 'No permissions assigned. User can only access basic features.',
    effectivePermissionsTotal: 'Total permissions',
    effectivePermissionsAll: 'All permissions',
    effectivePermissionsAdminTitle: 'Administrator',
    effectivePermissionsError: 'Error loading permissions',
    
    permissionOverrides: 'Permission Overrides',
    permissionOverridesDesc: 'Specifically granted or denied permissions',
    permissionOverridesSet: 'Set',
    permissionOverridesSetTitle: 'Set Permission Override',
    permissionOverridesSetDesc: 'Specifically grant or deny a permission for this user',
    permissionOverridesPermission: 'Permission',
    permissionOverridesSelectPermission: 'Select a permission',
    permissionOverridesLocation: 'Location (optional)',
    permissionOverridesGlobal: 'Global (all locations)',
    permissionOverridesGrant: 'Grant permission',
    permissionOverridesDeny: 'Deny permission',
    permissionOverridesGranted: 'Granted',
    permissionOverridesDenied: 'Denied',
    permissionOverridesNone: 'No specific overrides',
    
    rolesByLocation: 'Roles by Location',
    rolesByLocationDesc: 'Roles assigned for each location',
    rolesByLocationAssign: 'Assign',
    rolesByLocationAssignTitle: 'Assign Role',
    rolesByLocationAssignDesc: 'Select a role and optionally a specific location',
    rolesByLocationRole: 'Role',
    rolesByLocationSelectRole: 'Select a role',
    rolesByLocationNone: 'No roles assigned',
    rolesByLocationLevel: 'Level',
    rolesByLocationFrom: 'From',
    
    // Email Logs
    emailLogs: 'Email Logs',
    emailLogsDesc: 'View and filter all emails sent by the system',
    emailLogsRefresh: 'Refresh',
    emailLogsSearch: 'Search by email or subject...',
    emailLogsFilters: 'Filters',
    emailLogsAllStatuses: 'All statuses',
    emailLogsAllTypes: 'All types',
    emailLogsResetFilters: 'Reset filters',
    emailLogsSent: 'Sent',
    emailLogsPending: 'Pending',
    emailLogsFailed: 'Failed',
    emailLogsBounced: 'Bounced',
    emailLogsDate: 'Date/Time',
    emailLogsRecipient: 'Recipient',
    emailLogsType: 'Type',
    emailLogsSubject: 'Subject',
    emailLogsDetails: 'Details',
    emailLogsNone: 'No logs found',
    emailLogsRotaPublished: '📅 Schedule published',
    emailLogsShiftChange: '🔄 Shift change',
    emailLogsLeaveDecision: '✅ Leave decision',
    emailLogsErrorLoading: 'Error loading logs',
    
    // Leave Types
    leaveTypes: 'Leave Types',
    leaveTypesDesc: 'Manage your organization\'s leave/time-off types',
    leaveTypesNew: 'New Type',
    leaveTypesEdit: 'Edit Type',
    leaveTypesLabel: 'Label',
    leaveTypesKey: 'Key',
    leaveTypesColor: 'Color',
    leaveTypesRequiresApproval: 'Requires Approval',
    leaveTypesYes: 'Yes',
    leaveTypesNo: 'No',
    leaveTypesActive: 'Active',
    leaveTypesInactive: 'Inactive',
    leaveTypesNone: 'No types configured',
    leaveTypesNoneDesc: 'Create the first leave/time-off type for your organization',
    leaveTypesDeleteConfirm: 'Are you sure you want to delete this type? This action is irreversible.',
    leaveTypesActivated: 'Type activated',
    leaveTypesDeactivated: 'Type deactivated',
    leaveTypesErrorLoading: 'Error loading types',
    
    // Leave Type Form
    leaveTypeForm: {
      labels: {
        label: 'Label',
        key: 'Key',
        color: 'Color',
        requiresApproval: 'Requires Approval',
      },
      placeholders: {
        labelExample: 'e.g. Annual Leave',
        keyExample: 'e.g. annual_leave',
        colorCode: '#6b7280',
      },
      descriptions: {
        keyImmutable: 'Key cannot be modified after creation',
        requiresApprovalDescription: 'If active, requests must be approved by a manager',
      },
      buttons: {
        cancel: 'Cancel',
        saving: 'Saving...',
        update: 'Update',
        create: 'Create',
      },
      toast: {
        typeUpdated: 'Type updated',
        typeCreated: 'Type created successfully',
        errorSaving: 'Error saving',
      },
    },
    
    // Leave Inbox
    leaveInbox: 'Leave Inbox',
    leaveInboxDesc: 'Approve or reject pending leave/time-off requests',
    leaveInboxNone: 'No pending requests',
    leaveInboxNoneDesc: 'All leave requests have been processed',
    leaveInboxRequested: 'Requested on',
    leaveInboxNotes: 'Notes (optional)',
    leaveInboxNotesPlaceholder: 'Add a note to the decision...',
    leaveInboxApprove: 'Approve',
    leaveInboxReject: 'Reject',
    leaveInboxUserUnknown: 'Unknown user',
    leaveInboxErrorLoading: 'Error loading requests',
    
    // Timesheets
    timesheets: {
      title: 'Timesheets',
      description: 'Summary of worked hours and pay periods',
      loading: 'Loading...',
      noTimesheets: 'No timesheets found',
      notFound: 'Timesheet not found',
      filter: 'Filter',
      exportCSV: 'Export CSV',
      exportTitle: 'Export Timesheets CSV',
      totalHours: 'Total Hours',
      breakdown: 'Breaks',
    },
    
    // Feature Flags
    featureFlags: 'Feature Flags',
    featureFlagsDesc: 'Manage active features for modules and locations',
    featureFlagsNew: 'New Flag',
    featureFlagsTotal: 'Total Flags',
    featureFlagsActive: 'Active',
    featureFlagsInactive: 'Inactive',
    featureFlagsGlobal: 'Global',
    featureFlagsGlobalOnly: 'Global only',
    featureFlagsPerLocation: 'Per location',
    featureFlagsAllModules: 'All modules',
    featureFlagsAllScopes: 'All scopes',
    featureFlagsAccessDenied: 'Access Denied',
    featureFlagsAccessDeniedDesc: 'You don\'t have the necessary permissions to manage feature flags.',
    featureFlagsCreateTitle: 'Create New Feature Flag',
    featureFlagsCreateDesc: 'Configure a new feature flag to control functionality',
    featureFlagsModule: 'Module',
    featureFlagsFlagCode: 'Flag Code',
    featureFlagsName: 'Name',
    featureFlagsDescription: 'Description',
    featureFlagsScope: 'Scope',
    featureFlagsScopeGlobal: 'Global (entire organization)',
    featureFlagsScopeLocation: 'Per Location',
    featureFlagsEnabledDefault: 'Enabled by default',
    featureFlagsSearch: 'Search feature flags...',
    featureFlagsPlaceholder: 'Placeholder UI: This is a demo version.',
    
    // Feature Flags - Mock data
    mockFlagAutoApproval: 'Auto Approval Orders',
    mockFlagAutoApprovalDesc: 'Automatically approve orders below a certain threshold',
    mockFlagRealtime: 'Real-time Chat',
    mockFlagRealtimeDesc: 'Enable real-time messaging',
    mockFlagTracking: 'Advanced Tracking',
    mockFlagTrackingDesc: 'Advanced tracking system for inventory',
    
    // Feature Flags - Table & Filters
    featureFlagsFilters: 'Filters',
    featureFlagsOnlyGlobal: 'Global only',
    featureFlagsOnlyLocation: 'Per location only',
    featureFlagsActiveTitle: 'Active Feature Flags',
    featureFlagsActiveDesc: 'Manage active features for your organization',
    featureFlagsTableFlag: 'Flag',
    featureFlagsTableModule: 'Module',
    featureFlagsTableScope: 'Scope',
    featureFlagsTableStatus: 'Status',
    featureFlagsTableActions: 'Actions',
    featureFlagsScopeGlobalLabel: 'Global',
    featureFlagsStatusActive: 'Active',
    featureFlagsStatusInactive: 'Inactive',
    featureFlagsEditAction: 'Edit',
    
    // Feature Flags - Stats
    featureFlagsStatsTotal: 'Total Flags',
    featureFlagsStatsActive: 'Active Flags',
    featureFlagsStatsGlobal: 'Global Flags',
    featureFlagsStatsLocation: 'Per Location',
    
    // Timesheet Detail
    timesheetDetailNotFound: 'Timesheet not found',
    timesheetDetailApproving: 'Approving...',
    timesheetDetailApproveButton: 'Approve and Lock',
    timesheetDetailRegularHours: 'Regular Hours',
    timesheetDetailOvertime: 'Overtime',
    timesheetDetailDaysWorked: 'Days Worked',
    timesheetDetailBreakdown: 'Breakdown',
    timesheetDetailBreakTotal: 'Total breaks',
    timesheetDetailPlannedHours: 'Planned hours',
    timesheetDetailVariance: 'Variance vs planned',
    timesheetDetailNotes: 'Notes',
    timesheetDetailNotesPlaceholder: 'Add notes to timesheet...',
    timesheetDetailApprovedOn: 'Approved on',
    
    // Location Schedule
    locationScheduleTitle: 'Opening Hours',
    locationScheduleClosed: 'Closed',
    locationScheduleEdit: 'Edit',
    locationScheduleCancel: 'Cancel',
    locationScheduleSaving: 'Saving...',
    locationScheduleSave: 'Save',
    locationScheduleMorning: 'Morning',
    locationScheduleAfternoon: 'Afternoon',
    
    // Days of week
    dayMonday: 'Monday',
    dayTuesday: 'Tuesday',
    dayWednesday: 'Wednesday',
    dayThursday: 'Thursday',
    dayFriday: 'Friday',
    daySaturday: 'Saturday',
    daySunday: 'Sunday',
    
    // User Detail Tabs
    tabOverview: 'Overview',
    tabRolesLocation: 'Roles & Location',
    tabJobTags: 'Job Tags',
    tabPermissions: 'Effective Permissions',
    tabCompliance: 'Compliance',
    tabActivity: 'Activity',
    tabSecurity: 'Security',
  },
  
  // QA & Debug
  qa: {
    whoami: {
      title: 'User Information',
      userId: 'User ID',
      email: 'Email',
      emailVerified: 'Email Verified',
      lastLogin: 'Last Login',
      createdOn: 'Created on',
      provider: 'Provider',
      notAvailable: 'N/A',
    },
  },

  // Planner & Shifts
  planner: {
    common: {
      addShift: 'Add shift',
      addAbsence: 'Add absence',
      deleteShift: 'Delete shift',
      duplicateShift: 'Duplicate shift',
      publishRota: 'Publish rota',
      lockRota: 'Lock rota',
      unlockRota: 'Unlock rota',
      smartAssign: 'Smart assignment',
      templateLibrary: 'Template library',
      employee: 'Employee',
      unassignedShifts: 'Unassigned Shifts',
      shift: 'shift',
      shifts: 'shifts',
      selectUser: 'Select user',
      selectRole: 'Select role',
      noRole: 'No role',
      noUser: 'No user',
      analyzing: 'Analyzing...',
      creating: 'Creating...',
      saving: 'Saving...',
      deleting: 'Deleting...',
    },
    edit: {
      newShiftOrAbsence: 'New Shift or Absence',
      editShift: 'Edit Shift',
      newShift: 'New Shift',
      newAbsence: 'New Absence',
      date: 'Date',
      startTime: 'Start',
      endTime: 'End',
      breakMinutes: 'Break (minutes)',
      role: 'Role',
      assignUser: 'Assign User',
      notes: 'Notes',
      addNotes: 'Add notes...',
      delete: 'Delete',
      aiAssign: 'AI Assignment',
      analyzing: 'Analyzing candidates',
    },
    absence: {
      absencePeriod: 'Absence Period',
      startDate: 'Start Date',
      endDate: 'End Date',
      absenceType: 'Absence Type',
      selectType: 'Select type...',
      period: 'Period',
      morning: 'Morning',
      afternoon: 'Afternoon',
      fullDay: 'Full Day',
      selectUsers: 'Select Users',
      paidLeaveInfo: 'Paid leave is always for the full day',
      createAbsence: 'Create Absence',
    },
    publish: {
      title: 'Publish rota?',
      description: 'Once published, the rota will be visible to all employees. Managers will still be able to edit shifts.',
      titleLock: 'Lock rota?',
      descriptionLock: 'Once locked, the rota cannot be modified by anyone. This action is irreversible.',
      lockPermanently: 'Lock Permanently',
      draft: 'Draft',
      published: 'Published',
      locked: 'Locked',
      noRota: 'No Rota',
    },
    validation: {
      dateRequired: 'Date required',
      timesRequired: 'Start and end times required',
      endAfterStart: 'End time must be after start time',
      selectAbsenceType: 'Select an absence type',
      selectUser: 'Select at least one user',
      endDateAfterStart: 'End date must be equal to or after start date',
    },
    toast: {
      shiftCreated: 'Shift created successfully',
      shiftUpdated: 'Shift updated successfully',
      shiftDeleted: 'Shift deleted',
      shiftDuplicated: 'Shift duplicated successfully',
      shiftMoved: 'Shift moved successfully',
      rotaPublished: 'Rota published successfully',
      rotaLocked: 'Rota locked successfully',
      absencesCreated: 'absence(s) created successfully',
      absencesFailed: 'absences were not created',
      leaveCollision: 'There is already an absence for one or more users in this period. Remove the existing one or choose another day.',
      userLoadError: 'Error loading users',
      dataLoadError: 'Error loading data',
      errorSaving: 'Error saving',
      errorDeleting: 'Error deleting shift',
      errorMoving: 'Error moving shift',
      errorPublishing: 'Error publishing',
      errorLocking: 'Error locking',
      errorCreatingAbsence: 'Error creating absences',
      errorAssigningUser: 'Error assigning user',
      noActiveLocation: 'No active location',
    },
    permissions: {
      accessDenied: 'Access Denied',
      noPermission: 'You do not have the necessary permissions to access the shift planner.',
    },
    placeholders: {
      selectLocation: 'Select a location from the top bar',
    },
    smartAssign: {
      title: 'Smart Assignment',
      analyzeCandidates: 'Analyze Candidates',
      assign: 'Assign',
      assigning: 'Assigning...',
      noCandidates: 'No candidates available',
      score: 'Score',
      description: 'Use AI to find the best candidate for this shift',
      functionUnavailable: 'AI function unavailable. Verify it is deployed on Supabase.',
      apiKeyMissing: 'LOVABLE_API_KEY missing. Configure in Supabase Edge Functions Secrets.',
      loadError: 'Error loading candidates',
      aiError: 'AI Error',
      assignSuccess: 'Shift assigned successfully',
      assignError: 'Error assigning shift',
      qualified: 'Qualified',
      notQualified: 'Not Qualified',
      preferred: 'Preferred',
      available: 'Available',
      unavailable: 'Unavailable',
      recentHours: 'h last 7d',
    },
    templates: {
      title: 'Template Library',
      description: 'Select a template to apply to the current week',
      noTemplates: 'No templates available',
      shiftsCount: 'shifts',
      daysCount: 'days',
      apply: 'Apply',
      delete: 'Delete',
      applying: 'Applying...',
      deleting: 'Deleting...',
      confirmDelete: 'Are you sure you want to delete this template?',
    },
    dragDrop: {
      dragToDelete: 'Drag here to delete',
      releaseToDelete: 'Release to delete',
      addShiftOrAbsence: 'Add shift or absence',
      hideUsersWithoutShifts: 'Hide users without shifts',
      showAllUsers: 'Show all users',
    },
    stats: {
      weekStats: 'Week Statistics',
      shiftCoverage: 'Shift Coverage',
      totalHours: 'Total Hours',
      activeEmployees: 'Active Employees',
      budget: 'Budget',
      assigned: 'assigned',
      toAssign: 'to assign',
      unassigned: 'Unassigned',
      shifts: 'Shifts',
    },
  },

  // My Shifts
  myShifts: {
    title: 'My Shifts',
    description: 'Manage your shifts, availability and leave requests',
    tabs: {
      shifts: 'Shifts',
      availability: 'Availability',
      leave: 'Leave',
    },
    shifts: {
      noShifts: 'No shifts assigned',
      accept: 'Accept',
      decline: 'Decline',
      accepting: 'Accepting...',
      declining: 'Declining...',
      week: 'Week of',
      breakMinutes: 'Break',
      min: 'min',
      status: {
        accepted: 'Accepted',
        declined: 'Declined',
        assigned: 'Assigned',
        proposed: 'Proposed',
      },
    },
    toast: {
      shiftAccepted: 'Shift accepted successfully',
      shiftDeclined: 'Shift declined',
      errorAccept: 'Error accepting shift',
      errorDecline: 'Error declining shift',
    },
  },

  // Metadata (page titles/descriptions)
  metadata: {
    plannerTitle: 'Shift Planner',
    plannerDesc: 'Plan and manage your team\'s shifts',
    myShiftsTitle: 'My Shifts',
    myShiftsDesc: 'View your assigned shifts',
  },

  // Feature Flags
  featureFlags: {
    title: 'Feature Flags',
    description: 'Manage features that can be enabled per location or globally',
    stats: {
      total: 'Total Flags',
      active: 'Active',
      inactive: 'Inactive',
    },
    badges: {
      active: 'Active',
      inactive: 'Inactive',
      global: 'Global',
    },
    buttons: {
      new: 'New Flag',
      edit: 'Edit',
      filters: 'Filters',
    },
    search: {
      placeholder: 'Search flags by name or description...',
    },
    table: {
      name: 'Flag Name',
      status: 'Status',
      scope: 'Scope',
      description: 'Description',
      actions: 'Actions',
    },
    placeholder: {
      notice: 'This is a placeholder interface for feature flag management. Functionality coming soon.',
    },
    mockDescriptions: {
      inventoryAdvancedSearch: 'Advanced inventory search',
      supplierIntegration: 'Automatic supplier integration',
      taskAutomation: 'Recurring task automation',
      mobileNotifications: 'Mobile push notifications',
      advancedReporting: 'Advanced reports and analytics',
      chatIntegration: 'Integrated chat system',
    },
  },

  // Onboarding Rota Module
  onboarding: {
    wizard: {
      title: 'Rota Onboarding',
      description: 'Create your first weekly rota and assign shifts to users.',
      steps: {
        location: {
          title: 'Location',
          description: 'Select location',
        },
        week: {
          title: 'Week',
          description: 'Choose week',
        },
        shifts: {
          title: 'Shifts',
          description: 'Add shifts',
        },
        publish: {
          title: 'Publish',
          description: 'Review and send',
        },
      },
    },
    step1: {
      loading: 'Loading locations...',
      noAccess: 'You don\'t have access to any location. Contact your administrator to get the necessary permissions.',
      title: 'Select Location',
      description: 'Choose the location for which you want to create the weekly rota.',
      locationLabel: 'Location',
      locationPlaceholder: 'Select a location',
      nextButton: 'Next',
    },
    shiftForm: {
      labels: {
        day: 'Day',
        role: 'Role',
        startTime: 'Start Time',
        endTime: 'End Time',
        breakMinutes: 'Break (minutes)',
        quantity: 'Quantity',
        assignTo: 'Assign to (optional)',
        notes: 'Notes (optional)',
      },
      placeholders: {
        selectRole: 'Select role',
        noAssignment: 'No assignment',
        additionalNotes: 'Additional notes...',
      },
      buttons: {
        cancel: 'Cancel',
        creating: 'Creating...',
        createShift: 'Create Shift',
      },
      validation: {
        selectRole: 'Select a role',
        endTimeAfterStart: 'End time must be after start time',
      },
      toast: {
        shiftCreated: 'Shift created successfully',
        errorCreating: 'Error creating shift',
      },
    },
    step3: {
      title: 'Add Shifts',
      description: 'Create shifts for the week and assign registered users.',
      weekShifts: 'Weekly Shifts',
      closeForm: 'Close Form',
      newShift: 'New Shift',
      deleteConfirm: 'Are you sure you want to delete this shift?',
      shiftDeleted: 'Shift deleted',
      errorDeleting: 'Error deleting shift',
      buttons: {
        back: 'Back',
        next: 'Next',
      },
    },
    step4: {
      title: 'Review & Publish',
      description: 'Review the summary and publish the rota to send emails to users.',
      totalShifts: 'Total Shifts',
      usersInvolved: 'Users Involved',
      assignedReady: 'shifts assigned and ready for publishing.',
      unassignedWarning: 'shifts not yet assigned. You can still publish and assign later.',
      whatHappens: 'What happens after publishing?',
      step1: 'The rota will be marked as "published" and can no longer be modified',
      step2: 'Each assigned user will receive an email with their shift details',
      step3: 'Users will be able to view their shifts in the "My Shifts" section',
      step4: 'You can monitor the rota from the Planner and dashboard',
      unassignedConfirm: 'There are {count} unassigned shifts. Do you want to proceed with publishing anyway?',
      buttons: {
        back: 'Back',
        publishing: 'Publishing...',
        publish: 'Publish Rota',
      },
      toast: {
        publishSuccess: 'Rota published successfully! Emails sent to assigned users.',
        publishError: 'Error publishing rota',
      },
    },
  },

  // Aria labels
  aria: {
    mainNav: 'Main navigation',
    expandNav: 'Expand navigation menu',
    collapseNav: 'Collapse navigation menu',
    openMenu: 'Open menu',
    toggleLanguage: 'Change language',
  },

  // Allergens
  allergens: {
    gluten: 'Gluten',
    crustaceans: 'Crustaceans',
    eggs: 'Eggs',
    fish: 'Fish',
    peanuts: 'Peanuts',
    soy: 'Soy',
    milk: 'Milk',
    tree_nuts: 'Tree Nuts',
    celery: 'Celery',
    mustard: 'Mustard',
    sesame: 'Sesame',
    lupin: 'Lupin',
    molluscs: 'Molluscs',
    sulfur_dioxide: 'Sulfur Dioxide',
  },

  // Months
  months: {
    jan: 'January',
    feb: 'February',
    mar: 'March',
    apr: 'April',
    may: 'May',
    jun: 'June',
    jul: 'July',
    aug: 'August',
    sep: 'September',
    oct: 'October',
    nov: 'November',
    dec: 'December',
  },

  // Recipe Status
  recipeStatus: {
    draft: 'Draft',
    submitted: 'Pending Approval',
    published: 'Published',
    archived: 'Archived',
  },

  recipeStatusTooltip: {
    draft: 'Recipe in draft, not yet submitted for approval',
    submitted: 'Recipe submitted and awaiting manager approval',
    published: 'Recipe approved and visible to everyone',
    archived: 'Recipe archived, no longer in use',
  },

  // Recipe Editor
  recipe: {
    newRecipe: 'New Recipe',
    editRecipe: 'Edit Recipe',
    fillAllFields: 'Fill in all fields to create a new recipe',
    backToRecipes: 'Back to recipes',
    backToRecipe: 'Back to recipe',
    
    // Tabs
    basicInfo: 'Basic Information',
    ingredients: 'Ingredients',
    preparation: 'Preparation',
    
    // Fields
    title: 'Title',
    titlePlaceholder: 'E.g.: Traditional Carbonara',
    description: 'Description',
    descriptionPlaceholder: 'Brief recipe description...',
    category: 'Category',
    selectCategory: 'Select...',
    servings: 'Servings',
    prepTime: 'Prep Time (min)',
    cookTime: 'Cook Time (min)',
    photo: 'Recipe Photo',
    allergensLabel: 'Allergens',
    seasonality: 'Seasonality (recommended months)',
    
    // Validation messages
    enterTitle: 'Enter a title',
    selectCategoryError: 'Select a category',
    servingsMin: 'Servings must be at least 1',
    addIngredient: 'Add at least one ingredient',
    incompleteIngredients: 'Some ingredients have missing or invalid quantities',
    missingContext: 'User context missing',
    noPhotoWarning: 'The recipe has no photo. Save anyway?',
    addStepsLater: 'You can add preparation steps after saving',
    unsavedChanges: 'You have unsaved changes. Do you really want to exit?',
    unsavedChangesConfirm: 'You have unsaved changes. Do you really want to exit?',
    saveFirstToAddSteps: 'Save the recipe first to add preparation steps',
    unsavedChangesKeyboardHint: 'Unsaved changes • Use Ctrl/Cmd+S to save quickly',
    checklistCompleted: '✓ Checklist completed!',
    progressCompletion: 'Completion progress',
    sections: 'sections',
    completion: 'Completion',
    missingFields: 'Missing fields:',
    completeAllFields: 'complete all fields to submit the recipe',
    viewFullRecipe: 'View full recipe',
    
    // Success messages
    recipeCreated: 'Recipe created! Now add the preparation steps',
    recipeUpdated: 'Recipe updated',
    photoUploaded: 'Photo uploaded',
    
    // Error messages
    notFound: 'Recipe not found',
    cannotEdit: 'Only drafts can be edited',
    noPermission: 'You don\'t have permission to edit this recipe',
    loadError: 'Error loading recipe',
    saveError: 'Error saving recipe',
    uploadError: 'Error uploading photo',
    selectValidImage: 'Select a valid image file',
  },

  // Recipe Categories
  categories: {
    appetizer: 'Appetizer',
    main_course: 'Main Course',
    second_course: 'Second Course',
    side_dish: 'Side Dish',
    dessert: 'Dessert',
    beverage: 'Beverage',
    sauce: 'Sauce',
    other: 'Other',
  },

  // Recipes Module
  recipes: {
    clone: {
      cloning: 'Cloning...',
      cloneRecipe: 'Clone Recipe',
    },
    // Filters
    filters: {
      searchPlaceholder: 'Search recipes...',
      allStatuses: 'All statuses',
      allCategories: 'All categories',
      status: 'Status',
      category: 'Category',
      sortBy: 'Sort by',
      recent: 'Most recent',
      favorites: 'Favorites',
      mostUsed: 'Most used',
      nameAsc: 'Name A-Z',
      nameDesc: 'Name Z-A',
      mostCloned: 'Most cloned',
      onlyFavorites: 'Favorites only',
      includeIngredients: 'Include Ingredients',
      excludeIngredients: 'Exclude Ingredients',
      withoutAllergens: 'Without Allergens',
      withoutAllergensDesc: 'Show only recipes without these allergens',
      seasonMonths: 'Season months',
      filterByMonth: 'Filter by month...',
      inSeasonNow: 'In season now',
      clearFilters: 'Clear filters',
      search: 'Search',
      including: 'Include',
      excluding: 'Exclude',
      without: 'Without',
      selectedCount: '{count} selected',
    },
    
    // Categories
    categories: {
      main_course: 'Main Course',
      appetizer: 'Appetizer',
      dessert: 'Dessert',
      beverage: 'Beverage',
      side_dish: 'Side Dish',
      soup: 'Soup',
      salad: 'Salad',
      breakfast: 'Breakfast',
      other: 'Other',
    },
    
    // Recipe Editor
    editor: {
      title: 'New Recipe',
      tabs: {
        info: 'Basic Information',
        ingredients: 'Ingredients',
      },
      form: {
        titleLabel: 'Title',
        titlePlaceholder: 'e.g. Mushroom Risotto',
        descriptionLabel: 'Description',
        descriptionPlaceholder: 'Brief recipe description...',
        categoryLabel: 'Category',
        allergensLabel: 'Allergens',
        allergensPlaceholder: 'Select allergens present...',
        allergensHelp: 'Indicate the main allergens present in the recipe',
        seasonLabel: 'Seasonality',
        seasonPlaceholder: 'Select months...',
        seasonHelp: 'Indicate the months when this recipe is most appropriate',
        servingsLabel: 'Standard Servings',
        servingsHelp: 'Number of servings this recipe yields',
        prepTimeLabel: 'Prep Time (min)',
        cookTimeLabel: 'Cook Time (min)',
      },
      validation: {
        titleRequired: 'Title is required',
        categoryRequired: 'Category is required',
        servingsMin: 'Servings must be at least 1',
        ingredientsRequired: 'Add at least one ingredient',
        ingredientQuantityRequired: 'At least one ingredient must have quantity > 0',
        photoRequired: 'Upload a photo for the recipe',
        contextMissing: 'Organization context missing',
        incompleteIngredients: 'Complete all ingredients or remove them',
      },
      toast: {
        success: 'Recipe created successfully',
        error: 'Error saving recipe',
        authError: 'User not authenticated',
      },
      buttons: {
        cancel: 'Cancel',
        save: 'Save Draft',
        saving: 'Saving...',
      },
    },
    
    // Item Selector
    itemSelector: {
      searchPlaceholder: 'Search ingredient...',
      loading: 'Loading...',
      noItems: 'No ingredients found',
      selected: '{count} selected',
    },
    
    // Allergen Selector
    allergenSelector: {
      label: 'Allergens',
      placeholder: 'Select allergens...',
      searchPlaceholder: 'Search allergen...',
      noAllergens: 'No allergen found.',
      selected: '{count} selected',
    },
    
    // Season Selector
    seasonSelector: {
      label: 'Seasonality',
      placeholder: 'Select months...',
      searchPlaceholder: 'Search month...',
      noMonths: 'No month found.',
      selectedCount: '{count} months selected',
    },
    
    // Ingredients Form
    ingredients: {
      title: 'Ingredients',
      addProduct: 'Product',
      addSubRecipe: 'Sub-Recipe',
      noIngredients: 'No ingredients. Click "Product" or "Sub-Recipe" to start.',
      type: 'Type',
      product: 'Product',
      subRecipe: 'Sub-Recipe',
      selectProduct: 'Select product',
      servingsNeeded: 'Servings needed',
      quantity: 'Quantity',
      unit: 'Unit',
      notes: 'Notes (optional)',
      optional: 'Optional ingredient',
      remove: 'Remove',
      errorLoading: 'Error loading products',
      loadingProducts: 'Loading products...',
    },
    
    // Steps Editor
    steps: {
      title: 'Procedure',
      addStep: 'Add Step',
      stepNumber: 'Step Number',
      timerMinutes: 'Timer (minutes)',
      stepTitle: 'Title (optional)',
      titlePlaceholder: 'e.g. Dough preparation',
      instruction: 'Instructions',
      instructionPlaceholder: 'Describe the step...',
      photoLabel: 'Step Photo (Optional)',
      checklist: 'Checklist (optional)',
      checklistPlaceholder: 'Add item and press Enter',
      save: 'Save',
      cancel: 'Cancel',
      edit: 'Edit',
      delete: 'Delete',
      deleteConfirm: 'Delete this step?',
      noSteps: 'No steps available',
      addFirstStep: 'Add the first step',
      enterInstructions: 'Enter instructions',
      stepNumberExists: 'Step number already exists',
      stepUpdated: 'Step updated',
      stepAdded: 'Step added',
      stepDeleted: 'Step deleted',
      errorSaving: 'Error saving step',
      errorDeleting: 'Error deleting step',
      items: 'items',
      min: 'min',
    },
    
    // Recipes Client (List Page)
    client: {
      title: 'Klyra Recipes',
      loading: 'Loading...',
      recipeFound: 'recipe found',
      recipesFound: 'recipes found',
      newRecipe: 'New Recipe',
      noRecipes: 'No recipes',
      startCreating: 'Start by creating your first recipe',
      createdBy: 'Created by',
      submit: 'Submit',
      archive: 'Archive',
      delete: 'Delete',
      deleteConfirm: 'Delete this draft?',
      photoRequired: '⚠️ Photo required to submit',
      toast: {
        loadError: 'Error loading recipes',
        submitSuccess: 'Recipe submitted for approval',
        submitError: 'Error submitting recipe',
        archiveSuccess: 'Recipe archived',
        archiveError: 'Error archiving',
        deleteSuccess: 'Recipe deleted',
        deleteError: 'Error deleting',
      },
    },
    
    // Recipe Detail Page
    detail: {
      back: 'Back',
      cookMode: 'Cook Mode',
      editDraft: 'Edit Draft',
      submitForApproval: 'Submit for Approval',
      approveAndPublish: 'Approve & Publish',
      submitting: 'Submitting...',
      approving: 'Approving...',
      notFound: 'Recipe not found',
      cloned: 'Cloned',
      servings: 'Servings',
      preparation: 'Preparation',
      total: 'Total',
      createdBy: 'Created by',
      ingredients: 'Ingredients',
      steps: 'Steps',
      serviceNotes: 'Service Notes',
      photoRequiredDraft: 'Photo required: Upload a recipe photo before submitting for approval.',
      photoMissingSubmitted: 'Photo missing: This recipe cannot be published without a photo.',
      uploadPhotoTooltip: 'Upload a photo before submitting',
      photoRequiredToPublish: 'Photo required to publish',
      toast: {
        loadError: 'Error loading recipe',
        submitNoPhoto: 'Upload a photo before submitting',
        submitSuccess: 'Recipe submitted for approval',
        submitError: 'Error submitting recipe',
        approveNoPhoto: 'Photo required to publish',
        approveSuccess: 'Recipe approved and published',
        approveError: 'Error approving recipe',
      },
    },
    
    // Favorites
    favorites: {
      addedToFavorites: 'Added to favorites',
      addedDescription: 'The recipe has been saved to your favorites',
      removedFromFavorites: 'Removed from favorites',
      removedDescription: 'The recipe has been removed from favorites',
      errorUpdate: 'Unable to update favorites',
      addToFavorites: 'Add to favorites',
      removeFromFavorites: 'Remove from favorites',
    },
    
    // Print
    print: {
      print: 'Print',
      printRecipe: 'Print Recipe',
      servings: 'Servings',
      servingsCount: '{count} servings',
      fullSheet: 'Full Sheet',
      stationSheet: 'Station Sheet',
      withPhotosAndNotes: 'With photos and notes',
      essentialOnly: 'Essential only',
      openInNewWindow: 'The sheet will open in a new window ready for printing or PDF export.',
      fullSheetOpened: 'Full sheet opened',
      stationSheetOpened: 'Station sheet opened',
      printError: 'Error printing',
    },
    
    // Cook Mode
    cook: {
      loading: 'Loading...',
      noProcedure: 'No procedure available',
      backToRecipe: 'Back to Recipe',
      stepOf: 'Step {current} of {total}',
      notes: 'Notes',
      serviceNotes: 'Service Notes',
      previous: 'Previous',
      next: 'Next',
      previousAriaLabel: 'Previous step (left arrow)',
      nextAriaLabel: 'Next step (right arrow)',
      loadError: 'Error loading recipe',
    },
    
    // Sub-Recipe Picker
    subRecipe: {
      label: 'Sub-Recipe',
      loading: 'Loading...',
      selectPlaceholder: 'Select a published recipe',
      noRecipes: 'No published recipes available',
      errorLoading: 'Error loading recipes',
    },
  },

  // Dashboard
  dashboard: {
    title: 'Dashboard',
    welcome: 'Welcome to your dashboard',
    systemOperational: 'System Operational',
    quickActions: 'Quick Actions',
    quickActionsDesc: 'Quickly access the main features of the platform',
    inviteUser: 'Invite User',
    manageLocations: 'Manage Locations',
    adminPanel: 'Admin Panel',
    myProfile: 'My Profile',
    myLocations: 'My Locations',
    settings: 'Settings',
    systemStatus: 'System Status',
    systemStatusDesc: 'All services are operational',
    systemOperationalStatus: 'System operational',
    debugInfo: 'Debug Info',
    permissions: 'Permissions',
    location: 'Location',
    canManageUsers: 'Can Manage Users',
    canViewAdmin: 'Can View Admin',
  },

  // Admin Dashboard
  adminDashboard: {
    title: 'Admin Dashboard',
    subtitle: 'Organization management and monitoring',
    errorLoading: 'Error Loading Admin Dashboard',
    tryAgain: 'Try Again',
    noData: 'No data available',
    orgId: 'Org ID',
    updated: 'Updated',
    refresh: 'Refresh',
    teamMembers: 'Team Members',
    activeUsers: 'Active users',
    locations: 'Locations',
    managedLocations: 'Managed locations',
    pendingInvites: 'Pending Invites',
    awaitingAcceptance: 'Awaiting acceptance',
    systemHealth: 'System Health',
    recentActivity: 'Recent Activity',
    noActivity: 'No recent activity',
    quickActions: 'Quick Actions',
    inviteUser: 'Invite User',
    addLocation: 'Add Location',
    manageUsers: 'Manage Users',
  },

  // Settings
  settings: {
    title: 'Settings',
    manageProfile: 'Manage your profile and preferences',
    saveChanges: 'Save changes',
    saving: 'Saving...',
    backToDashboard: 'Back to Dashboard',
    
    // Organization setup
    setupOrg: 'Setup your organization',
    setupOrgDescription: 'To access profile settings, you must first join or create an organization.',
    goToAdmin: 'Go to admin panel',
    completeSetup: 'Complete your account setup',
    
    // Tabs
    profile: 'Profile',
    preferences: 'Preferences',
    notifications: 'Notifications',
    
    // Profile
    profileInfo: 'Profile Information',
    updatePersonalInfo: 'Update your personal information',
    fullName: 'Full name',
    fullNamePlaceholder: 'John Doe',
    phone: 'Phone',
    phonePlaceholder: '+1 234 567 890',
    email: 'Email',
    emailCannotChange: 'Email cannot be changed here',
    
    // Preferences
    customizeExperience: 'Customize your app experience',
    language: 'Language',
    timezone: 'Timezone',
    marketing: 'Marketing',
    marketingDescription: 'Receive promotional emails and updates',
    
    // Email test
    testEmailConfig: 'Test email configuration',
    testEmailDescription: 'Send a test email to verify everything works',
    sendTestEmail: 'Send test email',
    sending: 'Sending...',
    lastTest: 'Last test',
    testEmailSent: 'Test email sent successfully!',
    testEmailError: 'Error sending',
    
    // Notifications
    notificationPreferences: 'Notification Preferences',
    controlNotifications: 'Control when and how to receive notifications',
    emailNotifications: 'Email notifications',
    receiveEmailNotif: 'Receive email notifications',
    systemNotifications: 'System notifications',
    systemNotifDescription: 'Important system updates',
    activityNotifications: 'Activity notifications',
    activityNotifDescription: 'Changes and updates to your data',
    
    // Detailed email preferences
    detailedEmailPreferences: 'Detailed Email Preferences',
    chooseEmailTypes: 'Choose which emails to receive for each event type',
    rotaPublished: 'Rota published',
    rotaPublishedDescription: 'Email when a new weekly rota is published',
    shiftChanges: 'Shift changes',
    shiftChangesDescription: 'Email when you are assigned or modified a shift',
    leaveDecisions: 'Leave decisions',
    leaveDecisionsDescription: 'Email when your leave requests are approved or rejected',
    advancedConfig: 'Advanced configuration (JSON)',
    
    // Success/error
    profileUpdated: 'Profile updated successfully!',
    saveError: 'Error saving',
  },

  // Languages
  languages: {
    it: 'Italiano',
    en: 'English',
    fr: 'Français',
    es: 'Español',
  },

  // Timezones
  timezones: {
    'Europe/Rome': 'Europe/Rome',
    'Europe/Paris': 'Europe/Paris',
    'Europe/London': 'Europe/London',
    'America/New_York': 'America/New York',
    'America/Los_Angeles': 'America/Los Angeles',
    'Asia/Tokyo': 'Asia/Tokyo',
  },

  // Compliance Settings
  compliance: {
    title: 'Compliance Settings',
    description: 'Configure French compliance rule thresholds (soft warnings). These do not block operations but generate visible warnings.',
    legalDisclaimerTitle: 'Legal Disclaimer',
    legalDisclaimerDescription: 'These settings do not constitute legal advice. Thresholds are configurable to adapt to specific collective agreements. Consult a labor consultant for exact compliance with French Code du travail.',
    thresholdLabel: 'Threshold (hours)',
    active: 'Active',
    inactive: 'Inactive',
    loading: 'Loading...',
    save: 'Save',
    deleteConfirm: 'Are you sure you want to delete this template? This will also delete all associated items.',
  },

  // User Management (Admin)
  userManagement: {
    inviteForm: {
      email: 'Email',
      emailPlaceholder: 'user@example.com',
      firstName: 'First Name',
      firstNamePlaceholder: 'John',
      lastName: 'Last Name',
      lastNamePlaceholder: 'Doe',
      globalRole: 'Global Role (optional)',
      selectGlobalRole: 'Select global role...',
      noGlobalRole: 'No global role',
      locationRoles: 'Location Roles',
      selectLocation: 'Select location...',
      selectRole: 'Select role...',
      assignedRoles: 'Assigned roles:',
      alreadyExists: 'This combination already exists',
      notes: 'Notes (optional)',
      notesPlaceholder: 'Additional notes about the user...',
      sendInvite: 'Send Invite',
      sending: 'Sending...',
      cancel: 'Cancel',
      success: 'Invite sent successfully!',
      error: 'Error sending invite',
      emailInvalid: 'Invalid email',
      firstNameRequired: 'First name required',
      lastNameRequired: 'Last name required',
    },
    permissionGrid: {
      title: 'Permissions',
      description: 'Select specific permissions for this user',
      selected: 'selected',
      defaultFromRole: 'default from role',
      resetToDefaults: 'Reset to defaults',
      resetSuccess: 'Permissions reset to role defaults',
      loading: 'Loading permissions...',
      loadError: 'Error loading permissions',
      loadPresetsError: 'Error loading role presets',
      noPermissions: 'No permissions available',
      defaultBadge: 'Default',
    },
    deleteDialog: {
      title: 'Delete User',
      description: 'This action is irreversible. The user and all associated data will be permanently deleted from the system.',
      willBeDeleted: 'Will be deleted:',
      account: 'User account',
      rolesAndPermissions: 'Roles and permissions',
      jobTags: 'Assigned job tags',
      activeSessions: 'Active sessions',
      activityHistory: 'Activity history',
      confirmLabel: 'To confirm, type the user\'s email:',
      emailPlaceholder: 'Enter email to confirm',
      cancel: 'Cancel',
      delete: 'Delete Permanently',
      deleting: 'Deleting...',
      success: 'User deleted successfully',
      error: 'Error deleting user',
      emailMismatch: 'Confirmation email does not match',
    },
  },

  // Templates Module
  templates: {
    title: 'Inventory Template Management',
    description: 'Create and manage templates for different inventory categories',
    newTemplate: 'New Template',
    noTemplatesTitle: 'No templates available',
    noTemplatesDescription: 'Create your first template to speed up inventory creation',
    createFirst: 'Create First Template',
    version: 'Version',
    products: 'products',
    product: 'product',
    active: 'Active',
    inactive: 'Inactive',
    edit: 'Edit',
    activate: 'Activate',
    deactivate: 'Deactivate',
    moreProducts: 'more products',
    loading: 'Loading templates...',
    categories: {
      kitchen: 'Kitchen',
      bar: 'Bar',
      cleaning: 'Cleaning',
    },
  },

  // Template Library Dialog
  templateLibrary: {
    title: 'Template Library',
    description: 'Apply a predefined template to the week of',
    apply: 'Apply',
    delete: 'Delete',
    loading: 'Loading...',
    noTemplates: 'No templates available',
    noTemplatesDescription: 'Create your first template from an existing week',
    shifts: 'shifts',
    days: 'days',
    deleteConfirm: 'Are you sure you want to delete this template?',
    applySuccess: 'Template applied: {count} shifts created',
    applyError: 'Error applying template',
    deleteSuccess: 'Template deleted',
    deleteError: 'Error deleting template',
    loadError: 'Error loading templates',
  },

  // Time Corrections
  timeCorrections: {
    title: 'Time Correction Requests',
    description: 'Manage time correction requests from employees',
    noPending: 'No pending requests',
    noPendingDescription: 'When employees submit correction requests, they will appear here.',
    loading: 'Loading...',
    requester: 'Requester',
    event: 'Event',
    location: 'Location',
    originalTime: 'Original Time',
    requestedTime: 'Requested Time',
    reason: 'Reason',
    reviewNotes: 'Review Notes (optional)',
    notesPlaceholder: 'Add notes about the decision...',
    approve: 'Approve',
    reject: 'Reject',
    approving: 'Approving...',
    rejecting: 'Rejecting...',
    approveSuccess: 'Correction approved',
    rejectSuccess: 'Correction rejected',
    error: 'Error processing request',
    loadError: 'Error loading requests',
  },

  // Shifts List (Onboarding)
  shiftsList: {
    noShifts: 'No shifts created. Use the form above to add shifts.',
    noRole: 'No role',
    unknown: 'Unknown',
    unassigned: 'Unassigned',
    breakMinutes: 'Break: {minutes} min',
    selectUser: 'Select user',
    assignSuccess: 'User assigned successfully',
    assignError: 'Error assigning user',
  },

  // Week Selection (Onboarding)
  weekSelection: {
    title: 'Select Week',
    description: 'Choose the reference week. The week always starts on Monday.',
    checking: 'Checking existing rota...',
    existsWarning: 'A rota already exists for this week (status: {status}). You can open it or create a new one.',
    back: 'Back',
    openExisting: 'Open Existing',
    createNew: 'Create New',
    createRota: 'Create Rota',
    creating: 'Creating...',
    success: 'Rota created successfully',
    error: 'Error creating rota',
    locationMissing: 'Location missing. Reload the page.',
  },

  // Employee Grid View
  employeeGrid: {
    employee: 'Employee',
    unassignedShifts: 'Unassigned Shifts',
    shift: 'shift',
    shifts: 'shifts',
    addShift: 'Add shift or absence',
    dragToDelete: 'Drag here to delete',
    releaseToDelete: 'Release to delete',
    deleteSuccess: 'Shift deleted',
    deleteError: 'Error deleting shift',
    duplicateSuccess: 'Shift duplicated successfully',
    moveSuccess: 'Shift moved successfully',
    moveError: 'Error moving shift',
  },

  // Recipe Photo Uploader
  recipePhoto: {
    title: 'Recipe photo',
    noPhoto: 'No photo',
    upload: 'Upload photo',
    change: 'Change photo',
    uploading: 'Uploading...',
    formats: 'Formats: JPG, PNG, WEBP. Max 5MB.',
    invalidType: 'Select a valid image file',
    tooLarge: 'File is too large. Max 5MB.',
    uploadSuccess: 'Photo uploaded successfully!',
    uploadError: 'Upload error: {error}',
  },

  // Inventory
  inventory: {
    // Page titles
    title: 'Inventory',
    catalog: 'Product Catalog',
    catalogDescription: 'Manage products for each department of your location',
    openCatalog: 'Open Catalog',
    history: 'Inventory History',
    templates: 'Templates',
    
    // Categories
    categories: {
      kitchen: 'Kitchen',
      bar: 'Bar',
      cleaning: 'Cleaning',
    },
    
    // Full page titles (composite)
    fullTitles: {
      kitchen: 'Kitchen Inventory',
      bar: 'Bar Inventory',
      cleaning: 'Cleaning Inventory',
    },
    
    // Descriptions
    descriptions: {
      manageInventories: 'Manage inventories for this category',
    },
    
    // Create mode short labels
    createModesShort: {
      template: 'Template',
      last: 'Last',
      empty: 'Empty',
    },
    
    // Product Categories (subcategories)
    productCategories: {
      kitchen: {
        fresh: 'Fresh',
        frozen: 'Frozen',
        dry: 'Dry',
        spices: 'Spices',
        oils: 'Oils',
        other: 'Other',
      },
      bar: {
        spirits: 'Spirits',
        wines: 'Wines',
        beers: 'Beers',
        softDrinks: 'Soft Drinks',
        mixers: 'Mixers',
        garnishes: 'Garnishes',
        other: 'Other',
      },
      cleaning: {
        detergents: 'Detergents',
        sanitizers: 'Sanitizers',
        tools: 'Tools',
        disposables: 'Disposables',
        other: 'Other',
      },
    },
    
    // Status labels
    status: {
      inProgress: 'In Progress',
      completed: 'Completed',
      approved: 'Approved',
      active: 'Active',
      inactive: 'Inactive',
      in_progress: 'In Progress',
      draft: 'Draft',
    },
    
    // Common labels
    labels: {
      product: 'Product',
      quantity: 'Quantity',
      unitPrice: 'Unit Price',
      totalValue: 'Total Value',
      category: 'Category',
      uom: 'Unit of Measure',
      notes: 'Notes',
      createdBy: 'Created by',
      createdAt: 'Created at',
      date: 'Date',
      creator: 'Creator',
      section: 'Section',
      price: 'Price',
      name: 'Name',
      selected: 'selected',
      products: 'products',
      items: 'items',
      none: 'None',
    },
    
    // Sections
    sections: {
      pantry: 'Pantry',
      fridge: 'Fridge',
      freezer: 'Freezer',
    },
    
    // Toast messages
    toast: {
      inventoryCreated: 'Inventory created successfully',
      inventoryDeleted: 'Inventory deleted',
      productAdded: 'Product added',
      productCreated: 'Product created successfully',
      productUpdated: 'Product updated',
      productDeleted: 'Product deleted',
      quantityUpdated: 'Quantity updated',
      templateCreated: 'Template created successfully',
      templateUpdated: 'Template updated successfully',
      errorCreatingInventory: 'Error creating inventory',
      errorLoadingInventories: 'Error loading inventories',
      errorLoadingProducts: 'Error loading products',
      errorLoadingCatalog: 'Error loading catalog',
      errorAddingProduct: 'Error adding product',
      errorCreatingProduct: 'Error creating product',
      errorUpdatingProduct: 'Error updating product',
      errorDeletingProduct: 'Error deleting product',
      errorUpdatingQuantity: 'Error updating quantity',
      errorLoadingTemplate: 'Error loading template',
      errorSavingTemplate: 'Error saving template',
      allFieldsRequired: 'All fields are required',
      selectProduct: 'Select a product',
      enterQuantity: 'Enter a valid quantity',
      selectCategory: 'Select a category',
      templateNameRequired: 'Template name is required',
      selectAtLeastOneProduct: 'Select at least one product',
      comingSoon: 'Coming soon',
      viewDetails: 'View details',
      edit: 'Edit',
      viewDetailsSoon: 'Detail view - Coming soon',
      editInventorySoon: 'Edit inventory - Coming soon',
      exportPdfSoon: 'PDF export - Coming soon',
      sendEmailSoon: 'Send email - Coming soon',
      noInventoriesFound: 'No inventories found',
      exportPdf: 'Export PDF',
      sendEmail: 'Send via email',
    },
    
    // Placeholders
    placeholders: {
      search: 'Search products...',
      searchInventories: 'Search inventories...',
      selectProduct: 'Select product...',
      selectCategory: 'Select category...',
      enterQuantity: 'Enter quantity',
      enterPrice: 'Enter price',
      enterName: 'Enter product name',
      enterNotes: 'Add notes...',
      selectUom: 'Select unit...',
      customUnit: 'Custom unit',
      enterCustomUnit: 'Enter unit',
      templateName: 'Template name',
    },
    
    // Buttons
    buttons: {
      createInventory: 'Create Inventory',
      createTemplate: 'Create Template',
      addProduct: 'Add Product',
      newProduct: 'New Product',
      save: 'Save',
      cancel: 'Cancel',
      delete: 'Delete',
      edit: 'Edit',
      view: 'View',
      confirm: 'Confirm',
      back: 'Back',
      next: 'Next',
      finish: 'Finish',
      createAndAdd: 'Create and Add',
      add: 'Add',
      remove: 'Remove',
      bulkDelete: 'Delete Selected',
      saveChanges: 'Save Changes',
      complete: 'Complete',
      approve: 'Approve',
    },
    
    // Dialogs
    dialogs: {
      createInventoryTitle: 'Create New Inventory',
      addItemTitle: 'Add Product',
      editProductTitle: 'Edit Product',
      deleteConfirmTitle: 'Confirm Deletion',
      createTemplateTitle: 'Create Template',
      editTemplateTitle: 'Edit Template',
    },
    
    // Confirmations
    confirmations: {
      deleteInventory: 'Are you sure you want to delete this inventory?',
      deleteInventoryDesc: 'This action is irreversible and all associated data will be deleted.',
      deleteProduct: 'Are you sure you want to delete this product?',
      bulkDeleteProducts: 'Are you sure you want to delete {count} products?',
      deleteItem: 'Do you want to remove this item from the inventory?',
    },
    
    // Empty states
    empty: {
      noInventories: 'No inventories found',
      noProducts: 'No products available',
      noProductsFound: 'No products found',
      noItems: 'No items in inventory',
      noTemplates: 'No templates available',
      startInventory: 'Start by creating your first inventory',
      addProducts: 'Add products to get started',
    },
    
    // Loading states
    loading: {
      inventories: 'Loading inventories...',
      products: 'Loading products...',
      catalog: 'Loading catalog...',
      history: 'Loading inventory history...',
      saving: 'Saving...',
      creating: 'Creating...',
      deleting: 'Deleting...',
    },
    
    // History page
    historyPage: {
      title: 'Inventory History',
      searchPlaceholder: 'Search by location, user...',
      filterStatus: 'Status',
      filterCategory: 'Category',
      allStatuses: 'All statuses',
      allCategories: 'All categories',
      errorLoading: 'Error loading history',
      tableHeaders: {
        startDate: 'Start Date',
        category: 'Category',
        location: 'Location',
        status: 'Status',
        totalValue: 'Total Value',
        startedBy: 'Started By',
        approvedBy: 'Approved By',
        approvalDate: 'Approval Date',
        actions: 'Actions',
      },
    },
    
    // Tabs
    tabs: {
      fromCatalog: 'From Catalog',
      newProduct: 'New Product',
      fromTemplate: 'From Template',
      fromLast: 'From Last',
      empty: 'Empty',
      existing: 'Existing',
    },
    
    // Create modes
    createModes: {
      template: 'Use a template to populate the inventory',
      last: 'Copy from the last approved inventory',
      empty: 'Start with an empty inventory',
    },
    
    // Info messages
    info: {
      selectedCount: '{count} {label} selected',
      noTemplatesAvailable: 'No active templates available for this category',
    },
    
    // Filter labels
    filters: {
      all: 'All',
      activeOnly: 'Active Only',
      showInactive: 'Show inactive also',
    },
  },
  
  // Inventory category descriptions
  inventoryCategoryKitchenDesc: 'Manage kitchen products: meat, fish, vegetables, dairy and more',
  inventoryCategoryBarDesc: 'Manage bar products: wines, beers, soft drinks and consumables',
  inventoryCategoryCleaningDesc: 'Manage cleaning and maintenance products',

  // Locations
  locations: {
    myLocations: 'My Locations',
    manageSchedules: 'Manage schedules for locations you are responsible for',
    manageScheduleButton: 'Manage Schedule',
    archived: 'Archived',
  },

  // Staff
  staff: {
    jobTags: {
      title: 'Job Tags - Role Management',
      description: 'Manage staff roles and location assignments',
      pageTitle: 'Job Tags | Role Management',
      pageDescription: 'Manage staff roles and location assignments',
      tabCatalog: 'Catalog',
      tabAssignments: 'Assignments',
      colors: {
        purple: 'Purple',
        red: 'Red',
        green: 'Green',
        blue: 'Blue',
        yellow: 'Yellow',
        pink: 'Pink',
        teal: 'Teal',
        orange: 'Orange',
        indigo: 'Indigo',
        lime: 'Lime',
      },
      catalogTitle: 'Roles Catalog',
      catalogDescription: 'Create and manage available roles for your organization',
      assignmentsTitle: 'Assignments by Location',
      assignmentsDescription: 'Manage role assignments for each location',
      catalog: {
        title: 'Tag Catalog',
        description: 'Manage available job tags',
        newTag: 'New Tag',
        editTag: 'Edit Tag',
        deleteTag: 'Delete Tag',
        tagName: 'Tag Name',
        tagCode: 'Tag Code',
        active: 'Active',
        inactive: 'Inactive',
        noTags: 'No tags available',
        createFirst: 'Create your first job tag',
      },
      assignments: {
        title: 'Assignments',
        description: 'Assign job tags to users by location',
        selectLocation: 'Select location',
        selectUser: 'Select user',
        selectTag: 'Select tag',
        assignTag: 'Assign Tag',
        removeTag: 'Remove Tag',
        noAssignments: 'No assignments',
        user: 'User',
        tags: 'Tags',
        actions: 'Actions',
      },
      form: {
        name: 'Name',
        namePlaceholder: 'e.g. Chef de Partie',
        code: 'Code',
        codePlaceholder: 'e.g. chef_partie',
        description: 'Description',
        descriptionPlaceholder: 'Role description...',
        color: 'Color',
        status: 'Status',
        cancel: 'Cancel',
        save: 'Save',
        create: 'Create',
        saving: 'Saving...',
        creating: 'Creating...',
      },
      toast: {
        tagCreated: 'Tag created successfully',
        tagUpdated: 'Tag updated',
        tagDeleted: 'Tag deleted',
        tagAssigned: 'Tag assigned',
        tagUnassigned: 'Tag removed',
        errorCreating: 'Error creating tag',
        errorUpdating: 'Error updating',
        errorDeleting: 'Error deleting',
        errorAssigning: 'Error assigning',
        errorLoading: 'Error loading',
      },
      confirmations: {
        deleteTag: 'Are you sure you want to delete this tag?',
        removeAssignment: 'Do you want to remove this assignment?',
      },
    },
  },

  // Toast Messages
  toast: {
    // Generic success
    success: {
      saved: 'Saved successfully',
      created: 'Created successfully',
      updated: 'Updated successfully',
      deleted: 'Deleted successfully',
      copied: 'Copied to clipboard',
      uploaded: 'Uploaded successfully',
      sent: 'Sent successfully',
      activated: 'Activated',
      deactivated: 'Deactivated',
      approved: 'Approved',
      rejected: 'Rejected',
      cancelled: 'Cancelled',
      revoked: 'Revoked',
      generated: 'Generated successfully',
      exported: 'Exported successfully',
      imported: 'Imported successfully',
    },

    // Generic errors
    error: {
      generic: 'An error occurred',
      loading: 'Error loading',
      saving: 'Error saving',
      creating: 'Error creating',
      updating: 'Error updating',
      deleting: 'Error deleting',
      copying: 'Error copying',
      uploading: 'Error uploading',
      sending: 'Error sending',
      processing: 'Error processing',
      exporting: 'Error exporting',
      importing: 'Error importing',
      notFound: 'Resource not found',
      unauthorized: 'Unauthorized',
      forbidden: 'Access denied',
      validation: 'Invalid data',
      network: 'Connection error',
      timeout: 'Request timeout',
    },

    // Invitations
    invitation: {
      created: 'Invitation created successfully',
      revoked: 'Invitation revoked',
      linkCopied: 'Link copied to clipboard',
      errorCreating: 'Error creating invitation',
      errorRevoking: 'Error revoking invitation',
      errorCopying: 'Error copying link',
      errorLoading: 'Error loading invitations',
      selectRoleLocation: 'Select at least one role and location',
    },

    // Locations
    location: {
      created: 'Location created successfully',
      updated: 'Location updated successfully',
      deleted: 'Location deleted successfully',
      photoUploaded: 'Photo uploaded successfully',
      scheduleUpdated: 'Opening hours saved successfully',
      managerAdded: 'Manager assigned successfully',
      managerRemoved: 'Manager removed successfully',
      errorCreating: 'Unable to create location',
      errorUpdating: 'Unable to save changes',
      errorDeleting: 'Unable to delete location',
      errorUploadingPhoto: 'Unable to upload photo',
      errorUpdatingSchedule: 'Unable to save schedule',
      errorAddingManager: 'Unable to add manager',
      errorRemovingManager: 'Unable to remove manager',
      nameRequired: 'Location name is required',
      uploadFailed: 'Upload failed',
      createFailed: 'Failed to create location',
    },

    // Users
    user: {
      created: 'User created successfully',
      updated: 'User updated successfully',
      deleted: 'User deleted successfully',
      roleAssigned: 'Role assigned successfully',
      roleRemoved: 'Role removed successfully',
      permissionUpdated: 'Permission updated successfully',
      errorCreating: 'Error creating user',
      errorUpdating: 'Error updating user',
      errorDeleting: 'Error deleting user',
      errorLoadingDetails: 'Error loading details',
    },

    // Recipes
    recipe: {
      created: 'Recipe created successfully',
      updated: 'Recipe updated successfully',
      deleted: 'Recipe deleted successfully',
      cloned: 'Recipe cloned',
      published: 'Recipe published',
      archived: 'Recipe archived',
      errorCreating: 'Error creating recipe',
      errorUpdating: 'Error updating recipe',
      errorDeleting: 'Error deleting recipe',
      errorCloning: 'Unable to clone recipe',
      errorLoading: 'Error loading recipe',
    },

    // Templates
    template: {
      created: 'Template created successfully',
      updated: 'Template updated successfully',
      deleted: 'Template deleted',
      activated: 'Template activated',
      deactivated: 'Template deactivated',
      errorCreating: 'Error creating template',
      errorUpdating: 'Error updating template',
      errorDeleting: 'Error deleting template',
      errorLoading: 'Error loading templates',
    },

    // Leave requests
    leave: {
      created: 'Leave request created',
      updated: 'Leave request updated',
      cancelled: 'Leave request cancelled',
      approved: 'Leave request approved',
      rejected: 'Leave request rejected',
      errorCreating: 'Error creating request',
      errorUpdating: 'Error updating',
      errorCancelling: 'Error cancelling',
      errorProcessing: 'Error processing',
      errorLoading: 'Error loading requests',
    },

    // Timesheets
    timesheet: {
      generated: 'timesheets generated',
      approved: 'Timesheet approved and locked',
      exported: 'CSV file downloaded',
      correctionApproved: 'Correction approved',
      correctionRejected: 'Correction rejected',
      errorGenerating: 'Error generating timesheets',
      errorExporting: 'Error exporting',
      errorLoading: 'Error loading timesheets',
      errorProcessing: 'Error processing decision',
      errorApproving: 'Failed to approve timesheet',
      noEvents: 'No time clock events in current month',
      notAuthenticated: 'Not authenticated',
      approvalFailed: 'Approval failed',
    },

    // Compliance
    compliance: {
      ruleUpdated: 'Rule updated',
      violationSilenced: 'Violation silenced',
      errorLoading: 'Error loading rules',
      errorUpdating: 'Error updating',
      errorSilencing: 'Error silencing',
    },

    // Shifts & Planner
    shift: {
      created: 'Shift created',
      updated: 'Shift updated',
      deleted: 'Shift deleted',
      assigned: 'Shift assigned',
      unassigned: 'Assignment removed',
      published: 'Shifts published',
      errorCreating: 'Error creating shift',
      errorUpdating: 'Error updating shift',
      errorDeleting: 'Error deleting shift',
      errorAssigning: 'Error assigning',
      errorPublishing: 'Error publishing',
      errorLoading: 'Error loading shifts',
  },

  // Permission Tags
  permissionTags: {
    title: 'Permission Tags Management',
    description: 'Manage user tags and permissions',
    tabs: {
      users: 'Users',
      modules: 'Modules',
    },
    selectUsersFirst: 'Please select users first',
    errorLoadingUsers: 'Error loading users',
    errorLoadingMatrix: 'Error Loading Permissions Matrix',
    unknownError: 'Unknown error occurred',
    filters: {
      search: 'Search users by email or name...',
      filterOrg: 'Filter by Organization',
      allOrgs: 'All Organizations',
    },
    tableHeaders: {
      user: 'User',
      organizations: 'Organizations',
      currentTags: 'Current Tags',
      created: 'Created',
      actions: 'Actions',
    },
  },

  // Job Tags
    jobTag: {
      created: 'Tag created',
      updated: 'Tag updated',
      deleted: 'Tag deleted',
      assigned: 'Tag assigned',
      unassigned: 'Tag removed',
      errorCreating: 'Error creating tag',
      errorUpdating: 'Error updating tag',
      errorDeleting: 'Error deleting tag',
      errorAssigning: 'Error assigning',
    },

    // Email logs
    email: {
      sent: 'Email sent',
      resent: 'Email resent',
      errorSending: 'Error sending',
      errorLoading: 'Error loading logs',
    },

    // Products
    product: {
      created: 'Product created',
      updated: 'Product updated',
      deleted: 'Product deleted',
      errorCreating: 'Error creating product',
      errorUpdating: 'Error updating product',
      errorDeleting: 'Error deleting product',
      errorLoading: 'Error loading products',
    },

    // Time Corrections
    correction: {
      approved: 'Correction approved',
      rejected: 'Correction rejected',
      errorLoading: 'Failed to load correction requests',
      errorProcessing: 'Failed to process decision',
    },
    
    // General Toasts
    permissionNotFound: 'Permission data not found',
    roleNotFound: 'Role data not found',
    timerComplete: 'Timer complete!',
    loadError: 'Loading error',
    profileUpdateSuccess: 'Profile completed successfully!',
    profileUpdateError: 'Error updating profile',
    profileUpdateLater: 'You can complete your profile later in settings',
    inviteError: 'Error creating invitation',
    recipeSaveError: 'Error saving recipe',
    tagSaveError: 'Error saving tag',
  },

  // Invite Acceptance
  invite: {
    pageTitle: 'System Invitation',
    pageDescription: 'You have been invited to join the management system',
    notFound: 'Invitation not found or invalid',
    expired: 'This invitation has expired',
    invalid: 'This invitation is no longer valid (it may have already been used or revoked)',
    validationError: 'Error validating invitation',
    systemTitle: 'System Invitation',
    welcome: 'Welcome, {email}!',
    role: 'Role',
    expires: 'Expires {time}',
    locations: 'Locations',
    customPermissions: 'Custom permissions',
    emailMismatch: 'You are logged in as {current} but the invitation is for {invited}. Logout to accept the invitation with the correct account.',
    emailConfirmNote: 'We sent you a confirmation email to {email}. Open the link to complete activation, then come back here and press "Login now".',
    loginNow: 'Login now',
    acceptInvite: 'Accept Invitation',
    acceptingInvite: 'Accepting...',
    signUp: 'Sign Up',
    logIn: 'Log In',
    logout: 'Logout',
    password: 'Password',
    confirmPassword: 'Confirm Password',
    enterPassword: 'Enter your password',
    alreadyRegistered: 'User already registered',
    useExistingAccount: 'Use your existing account to accept the invitation',
    inviteAccepted: 'Invitation Accepted!',
    completingProfile: 'Completing profile...',
    dataUnavailable: 'Invitation data unavailable',
    errorValidating: 'Error validating invitation',
    errorCreatingAccount: 'Error creating account (server)',
    errorAccepting: 'Error accepting invitation',
    emailSent: 'Confirmation email sent. Check your inbox.',
    loginFailed: 'Login failed. Make sure you clicked the link in the email.',
    noRoles: 'The invitation has no roles/locations associated. Contact the administrator.',
    accountCreated: 'Account created and invitation accepted!',
    accepted: 'Invitation accepted! Welcome 👋',
    logoutSuccess: 'Logout successful',
    signingUp: 'Signing up...',
    emailConfirmationRequired: 'Email confirmation required',
  },

  // Complete Profile
  completeProfile: {
    title: 'Complete Your Profile',
    welcomeMessage: 'Welcome, {email}!',
    successMessage: 'You have successfully accepted the invitation. Complete your profile to get started.',
    fullName: 'Full name',
    fullNamePlaceholder: 'John Doe',
    fullNameRequired: 'Full name is required',
    phone: 'Phone (optional)',
    phonePlaceholder: '+1 123 456 7890',
    language: 'Preferred language',
    timezone: 'Timezone',
    complete: 'Complete profile',
    completing: 'Saving...',
    skip: 'Skip for now',
    helpText: 'You can modify this information at any time from your profile settings.',
    success: 'Profile completed successfully!',
    error: 'Error updating profile: {error}',
    canCompleteLater: 'You can complete your profile later from settings',
  },

  // Timer
  timer: {
    title: 'Timer',
    completed: 'Timer completed!',
    totalMinutes: 'total',
    minute: 'minute',
    minutes: 'minutes',
    pause: 'Pause',
    start: 'Start',
    reset: 'Reset',
  },

  // Kiosk
  kiosk: {
    enterPin: 'Enter your PIN',
    pinDescription: 'Use your 4-digit PIN code',
    clear: 'Clear',
    verifying: 'Verifying...',
    welcome: 'Welcome, {name}!',
    chooseAction: 'Choose an action',
    hoursToday: 'Hours worked today',
    breaks: 'Breaks',
    clockIn: 'Clock In',
    clockOut: 'Clock Out',
    breakStart: 'Start Break',
    breakEnd: 'End Break',
    changeUser: 'Not {name}? Change user',
    punchSuccess: {
      clockIn: 'Clock in recorded',
      clockOut: 'Clock out recorded',
      breakStart: 'Break start recorded',
      breakEnd: 'Break end recorded',
    },
    errors: {
      invalidPin: 'Enter a 4-digit PIN',
      pinNotValid: 'Invalid PIN',
      lookupError: 'Error during lookup. Try again.',
      punchError: 'Error during punch. Try again.',
    },
  },

  // Service Notes
  serviceNotes: {
    title: 'Service Notes',
    description: 'Important information for service and preparation',
    addNote: 'Add Note',
    writeNote: 'Write a service note...',
    cancel: 'Cancel',
    save: 'Save Note',
    saving: 'Saving...',
    noNotes: 'No service notes',
    noteAdded: 'Note added',
    noteAddedDesc: 'The service note was successfully added',
    errorAdding: 'Unable to add note',
    user: 'User',
  },

  // Recipe Breadcrumb
  recipeBreadcrumb: {
    home: 'Home',
    recipes: 'Recipes',
    newRecipe: 'New Recipe',
    editRecipe: 'Edit Recipe',
  },

  // Validation Messages
  validation: {
    passwordMinLength: 'Password must be at least {min} characters',
    passwordsNotMatch: 'Passwords do not match',
    invalidEmail: 'Invalid email',
    emailRequired: 'Email is required',
    nameRequired: 'Name is required',
    surnameRequired: 'Surname is required',
    fullNameRequired: 'Full name is required',
    fullNameTooLong: 'Name is too long',
    phoneRequired: 'Phone is required',
    phoneFormat: 'Invalid phone format',
    localeRequired: 'Language is required',
    timezoneRequired: 'Timezone is required',
    fieldRequired: 'Field is required',
    minLength: 'Minimum {min} characters',
    maxLength: 'Maximum {max} characters',
    required: 'This field is required',
    email: 'Enter a valid email address',
    password: 'Password must contain at least 8 characters',
    passwordMatch: 'Passwords do not match',
    phone: 'Enter a valid phone number',
    url: 'Enter a valid URL',
    number: 'Enter a valid number',
    date: 'Enter a valid date',
    time: 'Enter a valid time',
    passwordRequired: 'Password required',
    passwordMismatch: 'Passwords do not match',
  },

  // Onboarding Shifts List
  onboardingShiftsList: {
    noRole: 'No role',
    noShifts: 'No shifts created. Use the form above to add shifts.',
    breakMinutes: 'Break: {minutes} min',
    unassigned: 'Unassigned',
    unknown: 'Unknown',
    selectUser: 'Select user',
    assignSuccess: 'User assigned successfully',
    assignError: 'Assignment error',
  },

  // Login Page
  login: {
    title: 'Klyra',
    subtitle: 'Sign in with your Supabase account',
    email: 'Email',
    password: 'Password',
    emailPlaceholder: 'enter your email',
    passwordPlaceholder: 'enter your password',
    loginButton: 'Sign In',
    loggingIn: 'Signing in...',
    errorEmailPassword: 'Please enter email and password',
    errorLogin: 'Login error',
    poweredBy: 'Staff Management System • Powered by Supabase',
  },
} as const;